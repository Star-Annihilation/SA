#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare, body, base, barrel, wheel1, wheel2;

static-var  Static_Var_1, Static_Var_2;


BankClerck(Func_Var_1, Func_Var_2, Func_Var_3)
{
	while( TRUE )
	{
		Func_Var_1 = get PIECE_XZ(base);
		Func_Var_3 = 0;
		if( get XZ_HYPOT(Func_Var_1 - Func_Var_2) >= 163840 )
		{
			Func_Var_3 = 0 - get XZ_ATAN(Func_Var_2 - Func_Var_1) * 80 / 40;
		}
		turn body to z-axis Func_Var_3 speed <60.>;
		Func_Var_2 = Func_Var_1;
		sleep 300;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.>;
	turn base to x-axis anglex speed <105.>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.> speed <30.>;
	turn base to x-axis <0.> speed <30.>;
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.>;
	turn base to z-axis anglez speed <50.>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.> speed <20.>;
	turn base to x-axis <0.> speed <20.>;
}

StartMoving()
{
	signal 4;
	set-signal-mask 4;
	Static_Var_2 = 1;
	spin wheel1 around x-axis speed <900.> accelerate <90.>;
	spin wheel2 around x-axis speed <900.> accelerate <90.>;
}

StopMoving()
{
	signal 4;
	Static_Var_2 = 0;
	spin wheel1 around x-axis speed <0.> accelerate <-90.>;
	spin wheel2 around x-axis speed <0.> accelerate <-90.>;
}

waking()
{
	while( TRUE )
	{
		if( Static_Var_2 )
		{
			emit-sfx 256 | 1 from wheel1;
			emit-sfx 256 | 1 from wheel2;
		}
		sleep 175;
	}
}

Create()
{
	Static_Var_2 = 0;
	hide flare;
	dont-cache flare;
	start-script SmokeUnit();
	start-script BankClerck();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-1.] now;
	show flare;
	sleep 150;
	hide flare;
	move barrel to z-axis [0.] speed [3.];
}

AimFromPrimary(piecenum)
{
	piecenum = flare;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	corpsetype = Rand( 1, 6 );
	if( severity <= 25 )
	{
		explode barrel type NOHEATCLOUD;
		explode body type NOHEATCLOUD ;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wheel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		explode barrel type NOHEATCLOUD ;
		explode body type NOHEATCLOUD ;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
		explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wheel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		explode barrel type NOHEATCLOUD;
		explode body type NOHEATCLOUD ;
		explode wheel1 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
		explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode wheel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	explode barrel type NOHEATCLOUD;
	explode body type NOHEATCLOUD;
	explode wheel1 type SHATTER | EXPLODE_ON_HIT | NOHEATCLOUD ;
	explode wheel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
	explode wheel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | NOHEATCLOUD ;
}
