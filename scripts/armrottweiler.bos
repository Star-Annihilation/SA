#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, turret, sleeve, barrel, flare, turret2, gun, flare2;


// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_3			8


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	signal 4;
	set-signal-mask 4;
	turn base to x-axis anglex speed <50.005495>;
	turn base to z-axis anglez speed <50.005495>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

Create()
{
	hide flare;
	hide flare2;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 6000;
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <60.000000>;
	turn sleeve to x-axis <0.000000> speed <50.000000>;
}

RestoreTertiary()
{
	sleep 3000;
	set-signal-mask 0;
	turn turret2 to y-axis <0.000000> speed <80.000000>;
	turn gun to x-axis <0.000000> speed <120.000000>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <80.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <65.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-3.000000] now;
	emit-sfx 1024 + 0 from flare;
	move barrel to z-axis [0.000000] speed [2.000000];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret2 to y-axis heading speed <240.000000>;
	turn gun to x-axis <0.000000> - pitch speed <120.000000>;
	wait-for-turn turret2 around y-axis;
	start-script RestoreTertiary();
	return (1);
}

FireTertiary()
{

}

QueryTertiary(piecenum)
{
	piecenum = flare2;
}

AimFromTertiary(piecenum)
{
	piecenum = turret2;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode sleeve type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type NOHEATCLOUD;
		explode turret type NOHEATCLOUD | FALL;
		explode barrel type NOHEATCLOUD | FALL;
		explode sleeve type NOHEATCLOUD | SHATTER;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode body type NOHEATCLOUD;
		explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		explode sleeve type NOHEATCLOUD | SHATTER;
		explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode body type NOHEATCLOUD;
	explode flare type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	explode sleeve type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode turret type NOHEATCLOUD | FALL | SMOKE | FIRE | EXPLODE_ON_HIT;
	return (corpsetype);
}
